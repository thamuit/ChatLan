/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lanchatapp.gui;

import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import lanchatapp.database.*;

/**
 *
 * @author Phu
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    String ver = "1.0";
    Database db = new Database();
    public Login() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/image/rabbit.png")));
        db.createConnection();
        this.setSize(new Dimension(700, 480));
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        if (db.checkVer(ver)==false){
            try {
                int i = JOptionPane.showConfirmDialog(this, "Có bản cập nhật. Vui lòng tải và cài đặt", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                 if (i==0){
                        Desktop d=Desktop.getDesktop();
                        try {
                        d.browse(new URI("https://drive.google.com/open?id=0B95UDaXd3T_AZmxnYUp4TEJOdEE"));
                        } catch (URISyntaxException ex) {
                        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                        }
                 }
                } catch (IOException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtUsername = new javax.swing.JTextField();
        jtPassword = new javax.swing.JPasswordField();
        jtSignUp = new javax.swing.JButton();
        jtSignIn = new javax.swing.JButton();
        jbThoat = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(jtUsername);
        jtUsername.setBounds(240, 200, 263, 30);
        getContentPane().add(jtPassword);
        jtPassword.setBounds(240, 260, 263, 30);

        jtSignUp.setText("Đăng ký");
        jtSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtSignUpActionPerformed(evt);
            }
        });
        getContentPane().add(jtSignUp);
        jtSignUp.setBounds(220, 410, 100, 20);

        jtSignIn.setText("Đăng nhập");
        jtSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtSignInActionPerformed(evt);
            }
        });
        getContentPane().add(jtSignIn);
        jtSignIn.setBounds(270, 310, 100, 23);

        jbThoat.setText("Thoát");
        jbThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbThoatActionPerformed(evt);
            }
        });
        getContentPane().add(jbThoat);
        jbThoat.setBounds(380, 310, 90, 23);

        jButton1.setText("Kiểm tra cập nhật");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(480, 410, 117, 23);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Signin.jpg"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 700, 450);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtSignUpActionPerformed
        SignUp signUp = new SignUp();
        signUp.setVisible(true);
    }//GEN-LAST:event_jtSignUpActionPerformed

    private void jtSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtSignInActionPerformed
        //Tạo kết nối
        // kiểm tra tên tài khoản, mật khẩu
        if (db.checkUser(getUsername(), getPassword())) {
            //JOptionPane.showMessageDialog(null, "Đăng nhập thành công");
            MainScreen ms = new MainScreen();
            // Khởi tạo các biến trong mainscreen
            ms.jtReceiveBox.setText(getPortLogin()+"");
            ms.jtUsername.setText(getNameLogin());
            
            ms.setVisible(true);
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "Sai tên tài khoản hoặc mật khẩu", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jtSignInActionPerformed

    private void jbThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbThoatActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jbThoatActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Tạo kết nối
        // kiểm tra cập nhật
        if (db.checkVer(ver)){
            JOptionPane.showMessageDialog(this, "Bạn sử dụng bản cập nhật mới nhất của ezzyMessenger. Hãy thử lại sau", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
           else {
            try {
                int i = JOptionPane.showConfirmDialog(this, "Có bản cập nhật. Vui lòng tải và cài đặt", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                 if (i==0){
                        Desktop d=Desktop.getDesktop();
                        try {
                        d.browse(new URI("https://drive.google.com/open?id=0B95UDaXd3T_AZmxnYUp4TEJOdEE"));
                        } catch (URISyntaxException ex) {
                        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                        }
                 }
                } catch (IOException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        } 
    }//GEN-LAST:event_jButton1ActionPerformed

    // Hàm get name của người đăng nhập
    public String getNameLogin(){
        String name = null;
        if(db.checkUser(getUsername(), getPassword())){
            name = db.getNameLogInDB(getUsername(), getPassword());
        }
        return name;
    }
    
    // Hàm get được port của người login
    public int getPortLogin(){
        int port = 0;
        if(db.checkUser(getUsername(), getPassword()))
            port = db.getPortLogInDB(getUsername(), getPassword());
        return port;
    }
    /**
     * @param args the command line arguments
     */

    // hàm khởi tạo look and feel

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jbThoat;
    private javax.swing.JPasswordField jtPassword;
    private javax.swing.JButton jtSignIn;
    private javax.swing.JButton jtSignUp;
    private javax.swing.JTextField jtUsername;
    // End of variables declaration//GEN-END:variables

    public String getUsername() {
        return jtUsername.getText();
    }

    public String getPassword() {
        return jtPassword.getText();
    }
    public static void main(String args[]) {
       try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            //</editor-fold>
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(call_voice.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(call_voice.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(call_voice.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(call_voice.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }
}
